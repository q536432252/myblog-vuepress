(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{420:function(t,v,_){"use strict";_.r(v);var e=_(1),s=Object(e.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"arraylist"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#arraylist"}},[t._v("#")]),t._v(" "),v("strong",[t._v("ArrayList")])]),t._v(" "),v("p",[t._v("List"),v("Integer",[t._v(" list = new ArrayList<>();")])],1),t._v(" "),v("p",[t._v("//反向输出")]),t._v(" "),v("p",[t._v("for(int i = lise.size() - 1; i>0; i--){")]),t._v(" "),v("p",[t._v("list2.add(list.get(i));")]),t._v(" "),v("p",[t._v("}")]),t._v(" "),v("p",[t._v("list.remove(list.size()-1)")]),t._v(" "),v("p",[t._v("list.contains(x);")]),t._v(" "),v("p",[t._v("list.clear() 清楚所有元素")]),t._v(" "),v("p",[t._v("list.toArray() //转为数组 参数是什么类型， 返回就是什么类型，如果不传参数，默认Object[]类型")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/q536432252/images/20230515113311.png",alt:""}})]),t._v(" "),v("p",[t._v("list.toArray(new int[list.size()][]); 返回二维数组")]),t._v(" "),v("p",[t._v("list.toArray(new String[0]);")]),t._v(" "),v("h2",{attrs:{id:"hashset"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hashset"}},[t._v("#")]),t._v(" "),v("strong",[t._v("HashSet")])]),t._v(" "),v("p",[t._v("Set"),v("Integer",[t._v(" set = new HashSet<>();")])],1),t._v(" "),v("p",[t._v("set.add();")]),t._v(" "),v("p",[t._v("set.get();")]),t._v(" "),v("p",[t._v("set.contains()")]),t._v(" "),v("p",[t._v("set.size()")]),t._v(" "),v("p",[t._v("set.remove(key);")]),t._v(" "),v("p",[t._v("两个set可以取交集")]),t._v(" "),v("p",[t._v("for(int i : nums1){")]),t._v(" "),v("p",[t._v("set1.add(i);")]),t._v(" "),v("p",[t._v("}")]),t._v(" "),v("p",[t._v("for(int i : nums2){")]),t._v(" "),v("p",[t._v("if(set1.contains(i)){")]),t._v(" "),v("p",[t._v("resSet.add(i);")]),t._v(" "),v("p",[t._v("}")]),t._v(" "),v("p",[t._v("}")]),t._v(" "),v("h2",{attrs:{id:"hashmap"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hashmap"}},[t._v("#")]),t._v(" "),v("strong",[t._v("HashMap")])]),t._v(" "),v("p",[t._v("Map<Integer,Integer> map = new HashMap<>();")]),t._v(" "),v("p",[t._v("map.put(key,value);")]),t._v(" "),v("p",[t._v("map.get(key)")]),t._v(" "),v("p",[t._v("map.containsKey(key)")]),t._v(" "),v("p",[t._v("map.getOrDefault(x,0) + 1;")]),t._v(" "),v("p",[t._v("map.size()")]),t._v(" "),v("p",[t._v("foreach遍历HashMap的方法")]),t._v(" "),v("p",[t._v("通过map.entrySet()方法，可以获取到一个set集合，而这个集合的每一个元素就是一个键值对。")]),t._v(" "),v("p",[t._v("for(Map.Entry<String,String> entry : map.entrySet()){")]),t._v(" "),v("p",[t._v('sout( "key:"+entry.getKey() + "value:"+entry.getValue());')]),t._v(" "),v("p",[t._v("}")]),t._v(" "),v("p",[t._v("map可以高效找两数之和为目标值")]),t._v(" "),v("p",[t._v("Map.Entry<> entry : map.entrySet()")]),t._v(" "),v("p",[t._v("entry.getKey();")]),t._v(" "),v("p",[t._v("entry.getValue();")]),t._v(" "),v("p",[t._v("map遍历所有key")]),t._v(" "),v("p",[t._v("for (int i : map.keySet()){")]),t._v(" "),v("p",[t._v("}")])])}),[],!1,null,null,null);v.default=s.exports}}]);