(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{425:function(t,a,s){"use strict";s.r(a);var r=s(1),n=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"spring循环依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring循环依赖"}},[t._v("#")]),t._v(" Spring循环依赖")]),t._v(" "),a("h2",{attrs:{id:"什么是循环依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是循环依赖"}},[t._v("#")]),t._v(" "),a("strong",[t._v("什么是循环依赖")])]),t._v(" "),a("p",[t._v("​\tA依赖B B依赖A")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lxzxz-club-myblog.oss-cn-guangzhou.aliyuncs.com/20230516204806.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"循环依赖的具体步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环依赖的具体步骤"}},[t._v("#")]),t._v(" "),a("strong",[t._v("循环依赖的具体步骤")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lxzxz-club-myblog.oss-cn-guangzhou.aliyuncs.com/20230516204851.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"如何解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何解决"}},[t._v("#")]),t._v(" "),a("strong",[t._v("如何解决：")])]),t._v(" "),a("p",[t._v("把实例化完成的对象 称为 "),a("u",[t._v("半成品对象")]),t._v("，把初始化完成的对象 称为 "),a("u",[t._v("成品对象")]),t._v("，通过存放在不同的缓存里面来解决循环依赖\nSpring里面是采用了三级缓存来进行 ：")]),t._v(" "),a("ul",[a("li",[t._v("第一级（singletonObjects）存放完整对象")]),t._v(" "),a("li",[t._v("第二级（earlySinletonObject）用来存储半成品对象")]),t._v(" "),a("li",[t._v("第三级（singletonFactory）用来存一个lambda表达式。")])]),t._v(" "),a("p",[t._v("实际上两级缓存就可以解决循环依赖的问题。")]),t._v(" "),a("p",[t._v("第三级缓存Value类型是ObjectFactory，是用来存Lambda表达式的，不是直接调用的， 只有在调用getObject()方法的时候，就会调用这个lambda表达式的getEarlyBeanReference这个方法，如果有AOP的时候，就会用代理对象覆盖原始对象，没有AOP的话，就会返回原始对象。")])])}),[],!1,null,null,null);a.default=n.exports}}]);